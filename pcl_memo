Install synaptic, this software is a powerful UI that can also install dependency ... 
But I DON'T KNOW how to use it at all. 
sudo apt-get install synaptic 

Use pcl's pcd file viewer, then we can see the 3d scene, we could also use it to test if pcl install successfully.
pcl_pcd_grabber_viewer -file ./heads_714.pcd


########################################################################3
before install the PCL, all thses libaraies shoud be installed:
sudo apt-get update
     sudo apt-get install git build-essential linux-libc-dev
     sudo apt-get install cmake cmake-gui 
     sudo apt-get install libusb-1.0-0-dev libusb-dev libudev-dev
     sudo apt-get install mpi-default-dev openmpi-bin openmpi-common  
     sudo apt-get install libflann1.8 libflann-dev
     sudo apt-get install libeigen3-dev
     sudo apt-get install libboost-all-dev
     sudo apt-get install libvtk5.10-qt4 libvtk5.10 libvtk5-dev
     sudo apt-get install libqhull* libgtest-dev
     sudo apt-get install freeglut3-dev pkg-config
     sudo apt-get install libxmu-dev libxi-dev 
     sudo apt-get install mono-complete
     sudo apt-get install qt-sdk openjdk-8-jdk openjdk-8-jre

git clone https://github.com/PointCloudLibrary/pcl.git

mkdir release
     cd release
     cmake -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_PREFIX=/usr 
           -DBUILD_GPU=ON -DBUILD_apps=ON -DBUILD_examples=ON 
           -DCMAKE_INSTALL_PREFIX=/usr ..
     make

The make will take some time, so go get a cup of coffee or take that long overdue shower.  Once the build finishes, install it by:

     sudo make install

**Note**: Sometime, we will install some library or program by using .deb or just sudo apt-get install XXX-dev(some ubuntu developer want make user's life easier so they made all config and source in a pack, you just need to type it.)
This way will cause some problem, because some of the dependencys could missing, or the config environmrnt is different on your own computer.
#####################################################################
Reading Point Cloud data from PCD files

In this tutorial we will learn how to read point cloud data from a PCD file.
The code

First, create a file called, letâ€™s say, pcd_read.cpp in your favorite editor, and place the following code inside it:

 

	

#include <iostream>
#include <pcl/io/pcd_io.h>
#include <pcl/point_types.h>

int
main (int argc, char** argv)
{
  pcl::PointCloud<pcl::PointXYZ>::Ptr cloud (new pcl::PointCloud<pcl::PointXYZ>);

  if (pcl::io::loadPCDFile<pcl::PointXYZ> ("test_pcd.pcd", *cloud) == -1) //* load the file
  {
    PCL_ERROR ("Couldn't read file test_pcd.pcd \n");
    return (-1);
  }
  std::cout << "Loaded "
            << cloud->width * cloud->height
            << " data points from test_pcd.pcd with the following fields: "
            << std::endl;
  for (size_t i = 0; i < cloud->points.size (); ++i)
    std::cout << "    " << cloud->points[i].x
              << " "    << cloud->points[i].y
              << " "    << cloud->points[i].z << std::endl;

  return (0);
}

